{"version":3,"sources":["logo.svg","constants/userConstants.js","components/SearchBox.js","components/Header.js","actions/userActions.js","components/Footer.js","components/Rating.js","components/Product.js","constants/productConstants.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","constants/orderConstants.js","screens/ProfileScreen.js","actions/orderActions.js","screens/CheckoutScreen.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","App.js","reportWebVitals.js","reducers/cartReducer.js","reducers/index.js","reducers/productReducers.js","reducers/userReducers.js","reducers/orderReducer.js","store.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","type","name","onChange","target","value","className","Button","variant","Header","userInfo","useSelector","state","userLogin","dispatch","useDispatch","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","onClick","NavDropdown","title","Item","localStorage","removeItem","Footer","Container","Row","Col","Rating","text","color","style","Product","product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","pages","page","isAdmin","split","Pagination","Array","keys","map","x","active","ProductCarousel","productTopRated","error","loading","products","useEffect","a","axios","get","data","payload","response","detail","message","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","productList","search","listProducts","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","loadingProductReview","errorProductReview","successProductReview","success","params","ListGroup","description","countInStock","xs","disabled","reviews","length","review","productId","getState","config","headers","Authorization","token","post","Group","controlId","Label","row","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","Number","removeFromCartHandler","removeFromCart","item","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","Location","email","setEmail","password","setPassword","redirect","username","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","required","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","console","log","put","updateUserProfile","Table","striped","responsive","order","createdAt","substring","totalPrice","isPaid","paidAt","CheckoutScreen","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","orderCreate","itemsPrice","shippingPrice","taxPrice","index","createOrder","orderItems","OrderScreen","orderId","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","Id","href","isDelivered","deliveredAt","deliverOrder","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","combineReducers","action","productDelete","productCreate","productUpdate","existItem","find","filter","orderList","cartItemsFromStorage","getItem","parse","userInfoFromStorage","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.617fbf8d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\n\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_FAIL\"\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\"\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\"\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\"\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\"\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from \"react\";\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport SearchBox from './SearchBox'\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Header() {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory()\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n  const summer=()=>{\r\n    history.push(`/?keyword=summer&page=1`)\r\n  }\r\n  const winter=()=>{\r\n    history.push(`/?keyword=winter&page=1`)\r\n  }\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <LinkContainer to=\"/\">\r\n          <Navbar.Brand>Clothes</Navbar.Brand>\r\n        </LinkContainer>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <SearchBox />\r\n          <Nav className=\"ml-auto\">\r\n            <LinkContainer to=\"/cart\">\r\n              <Nav.Link>\r\n                <i className=\"fas fa-shopping-cart\"></i>Cart\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n            \r\n              <Nav.Link onClick={summer}>\r\n                Summer\r\n              </Nav.Link>\r\n              <Nav.Link onClick={winter}>\r\n                Winter\r\n              </Nav.Link>\r\n           \r\n            {userInfo ? (\r\n              <NavDropdown title={userInfo.name} id=\"username\">\r\n                <LinkContainer to=\"/profile\">\r\n                  <NavDropdown.Item>profile</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <NavDropdown.Item onClick={logoutHandler}>\r\n                  Logout\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            ) : (\r\n              <LinkContainer to=\"/login\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-user\"></i>Login\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_DETAILS_RESET,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/users/login/`,\r\n      {\r\n        username: email,\r\n        password: password,\r\n      },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({type:USER_DETAILS_RESET})\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `/api/users/register/`,\r\n      {\r\n        email: email,\r\n        password: password,\r\n        name: name,\r\n      },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    console.log(userInfo);\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/users/profile/update/`,\r\n      user,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <Container> \r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; Clothes</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        height: \"100px\",\r\n        width: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n        <span className=\"sr-only\"> Loading...</span>\r\n    </Spinner>\r\n    \r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\nfunction Message({variant,children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Product from \"../components/Product\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nfunction HomeScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { error, loading, products, page, pages } = productList;\r\n\r\n  let keyword = history.location.search;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n  return (\r\n    <div>\r\n      {!keyword && <ProductCarousel />}\r\n\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate page={page} pages={pages} keyword={keyword} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: ${product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.description}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>${product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.countInStock == 0}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                {/* <p>{review.createdAt.substring(0, 10)}</p> */}\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n\r\nexport const CART_CLEAR_ITEMS = \"CART_CLEAR_ITEMS\";\r\n","import axios from \"axios\";\r\nimport { CART_ADD_ITEM,CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD } from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n      type: CART_SAVE_PAYMENT_METHOD,\r\n      payload: data,\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\nfunction CartScreen({ match, location, history }) {\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, qty, productId]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n  const checkoutHandler = () => {\r\n    history.push('/placeorder')\r\n}\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1> Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message variant=\"danger\">\r\n            Your cart is empty\r\n            <Link to=\"/\"> Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={3}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.product, e.target.value))\r\n                      }\r\n                    >\r\n                      {/* [0,1,2,..] */}\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      onClick={(e) => removeFromCartHandler(item.product)}\r\n                      variant=\"light\"\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n\r\n          <ListGroup.Item>\r\n            <Button\r\n              type=\"button\"\r\n              className=\"btn-block\"\r\n              disabled={cartItems.length === 0}\r\n              onClick={checkoutHandler}\r\n            >\r\n              Proceed To Checkout\r\n            </Button>\r\n          </ListGroup.Item>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","\r\nimport React from 'react'\r\nimport { Container,Row,Col } from 'react-bootstrap'\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { login } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nfunction LoginScreen({ Location, history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const redirect = Location ? Location.search.split(\"=\")[1] : \"/\";\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, loading, userInfo } = userLogin;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label> Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label> Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New User?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nfunction RegisterScreen({ Location, history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const redirect = Location ? Location.search.split(\"=\")[1] : \"/\";\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { error, loading, userInfo } = userRegister;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password != confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label> Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            required\r\n            placeholder=\"Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label> Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            required\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label> Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            required\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Sign In\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Form, Row, Col, Button, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getUserDetails,\r\n  register,\r\n  updateUserProfile,\r\n} from \"../actions/userActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nfunction ProfileScreen({ history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [history, userInfo, user, success]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password != confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n        })\r\n      );\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"passwordConfirm\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Paid</th>\r\n                <th>Delivered</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>${order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt  \r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\">Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders/add/`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.removeItem(\"cartItems\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${id}/pay/`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver/`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders/`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react'\r\nimport {Nav} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nfunction CheckoutScreen({step1,step2,step3,step4}) {\r\n    return (\r\n        <Nav className=\"justify-content-center-mb-4\">\r\n            <Nav.Item>\r\n                {step1?\r\n                   <LinkContainer to=\"/login\">\r\n                   <Nav.Link>Login</Nav.Link>\r\n               </LinkContainer>:\r\n               <Nav.Link disabled>Login</Nav.Link>\r\n                }\r\n             \r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2?\r\n                   <LinkContainer to=\"/shipping\">\r\n                   <Nav.Link>Shipping</Nav.Link>\r\n               </LinkContainer>:\r\n               <Nav.Link disabled>Shipping</Nav.Link>\r\n                }\r\n             \r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3?\r\n                   <LinkContainer to=\"/payment\">\r\n                   <Nav.Link>Payment</Nav.Link>\r\n               </LinkContainer>:\r\n               <Nav.Link disabled>Payment</Nav.Link>\r\n                }\r\n             \r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4?\r\n                   <LinkContainer to=\"/placeorder\">\r\n                   <Nav.Link>Place Order</Nav.Link>\r\n               </LinkContainer>:\r\n               <Nav.Link disabled>Place order</Nav.Link>\r\n                }\r\n             \r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutScreen\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Message from \"../components/Message\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\nimport CheckoutScreen from \"./CheckoutScreen\";\r\nfunction ShippingScreen({ history }) {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n  const dispatch = useDispatch();\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push('/payment')\r\n  };\r\n  return (\r\n    <FormContainer>\r\n        <CheckoutScreen step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"ddress\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Address\"\r\n            value={address ? address : \"\"}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter City\"\r\n            value={city ? city : \"\"}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Postal Code\"\r\n            value={postalCode ? postalCode : \"\"}\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Postal Code\"\r\n            value={country ? country : \"\"}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Checkout\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from './CheckoutScreen'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Cash on delivery')\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Cash on delivery'\r\n                            id='cod'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"./CheckoutScreen\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, error, success } = orderCreate;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    .toFixed(2);\r\n  cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\r\n  cart.taxPrice = Number(0.082 * cart.itemsPrice).toFixed(2);\r\n\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n  }, [success, history]);\r\n\r\n  const placeOrder = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormContainer>\r\n        <CheckoutSteps step1 step2 step3 step4 />\r\n      </FormContainer>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                {\"  \"}\r\n                {cart.shippingAddress.postalCode},{\"  \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message variant=\"info\">Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrder}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>Order: {order.Id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\r\n                                        {'  '}\r\n                                        {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {/* {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={successPaymentHandler}\r\n                                                    />\r\n                                                )} */}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                                {loadingDeliver && <Loader />}\r\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { Container } from \"react-bootstrap\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Header />\n        <main>\n          <Container>\n            <Route path=\"/\" exact component={HomeScreen} />\n            <Route path=\"/product/:id\" component={ProductScreen} />\n            <Route path=\"/cart/:id?\" component={CartScreen} />\n            <Route path='/login' component={LoginScreen} />\n            <Route path='/register' component={RegisterScreen} />\n            <Route path='/profile' component={ProfileScreen} />\n            <Route path='/shipping' component={ShippingScreen} />\n            <Route path='/payment' component={PaymentScreen} />\n            <Route path='/placeorder' component={PlaceOrderScreen} />\n            <Route path='/order/:id' component={OrderScreen} />\n          </Container>\n        </main>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n} from \"../constants/cartConstants\";\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n  shippingAddress: {},\r\n};\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CART_ADD_ITEM:\r\n      const item = payload;\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== payload),\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: payload,\r\n      };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: payload,\r\n      };\r\n\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport cart from \"./cartReducer\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  //   userListReducer,\r\n  //   userDeleteReducer,\r\n  //   userUpdateReducer,\r\n} from \"./userReducers\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './productReducers'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n} from \"./orderReducer\";\r\nimport cartReducer from \"./cartReducer\";\r\nexport default combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart:cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  //   userList: userListReducer,\r\n  //   userDelete: userDeleteReducer,\r\n  //   userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n});\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n      case PRODUCT_LIST_REQUEST:\r\n          return { loading: true, products: [] }\r\n\r\n      case PRODUCT_LIST_SUCCESS:\r\n          return {\r\n              loading: false,\r\n              products: action.payload.products,\r\n              page: action.payload.page,\r\n              pages: action.payload.pages\r\n          }\r\n\r\n      case PRODUCT_LIST_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n  switch (action.type) {\r\n      case PRODUCT_DETAILS_REQUEST:\r\n          return { loading: true, ...state }\r\n\r\n      case PRODUCT_DETAILS_SUCCESS:\r\n          return { loading: false, product: action.payload }\r\n\r\n      case PRODUCT_DETAILS_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n      case PRODUCT_DELETE_REQUEST:\r\n          return { loading: true }\r\n\r\n      case PRODUCT_DELETE_SUCCESS:\r\n          return { loading: false, success: true }\r\n\r\n      case PRODUCT_DELETE_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n      case PRODUCT_CREATE_REQUEST:\r\n          return { loading: true }\r\n\r\n      case PRODUCT_CREATE_SUCCESS:\r\n          return { loading: false, success: true, product: action.payload }\r\n\r\n      case PRODUCT_CREATE_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      case PRODUCT_CREATE_RESET:\r\n          return {}\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n      case PRODUCT_UPDATE_REQUEST:\r\n          return { loading: true }\r\n\r\n      case PRODUCT_UPDATE_SUCCESS:\r\n          return { loading: false, success: true, product: action.payload }\r\n\r\n      case PRODUCT_UPDATE_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      case PRODUCT_UPDATE_RESET:\r\n          return { product: {} }\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n      case PRODUCT_CREATE_REVIEW_REQUEST:\r\n          return { loading: true }\r\n\r\n      case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n          return { loading: false, success: true, }\r\n\r\n      case PRODUCT_CREATE_REVIEW_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      case PRODUCT_CREATE_REVIEW_RESET:\r\n          return {}\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n      case PRODUCT_TOP_REQUEST:\r\n          return { loading: true, products: [] }\r\n\r\n      case PRODUCT_TOP_SUCCESS:\r\n          return { loading: false, products: action.payload, }\r\n\r\n      case PRODUCT_TOP_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      default:\r\n          return state\r\n  }\r\n}","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n\r\n  USER_LOGOUT,\r\n\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n\r\n  // USER_LIST_REQUEST,\r\n  // USER_LIST_SUCCESS,\r\n  // USER_LIST_FAIL,\r\n  // USER_LIST_RESET,\r\n\r\n  // USER_DELETE_REQUEST,\r\n  // USER_DELETE_SUCCESS,\r\n  // USER_DELETE_FAIL,\r\n\r\n  // USER_UPDATE_REQUEST,\r\n  // USER_UPDATE_SUCCESS,\r\n  // USER_UPDATE_FAIL,\r\n  // USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n      case USER_LOGIN_REQUEST:\r\n          return { loading: true }\r\n\r\n      case USER_LOGIN_SUCCESS:\r\n          return { loading: false, userInfo: action.payload }\r\n\r\n      case USER_LOGIN_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      case USER_LOGOUT:\r\n          return {}\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n      case USER_REGISTER_REQUEST:\r\n          return { loading: true }\r\n\r\n      case USER_REGISTER_SUCCESS:\r\n          return { loading: false, userInfo: action.payload }\r\n\r\n      case USER_REGISTER_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      case USER_LOGOUT:\r\n          return {}\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n      case USER_DETAILS_REQUEST:\r\n          return { ...state, loading: true }\r\n\r\n      case USER_DETAILS_SUCCESS:\r\n          return { loading: false, user: action.payload }\r\n\r\n      case USER_DETAILS_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      case USER_DETAILS_RESET:\r\n          return { user: {} }\r\n\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n      case USER_UPDATE_PROFILE_REQUEST:\r\n          return { loading: true }\r\n\r\n      case USER_UPDATE_PROFILE_SUCCESS:\r\n          return { loading: false, success: true, userInfo: action.payload }\r\n\r\n      case USER_UPDATE_PROFILE_FAIL:\r\n          return { loading: false, error: action.payload }\r\n\r\n      case USER_UPDATE_PROFILE_RESET:\r\n          return {}\r\n\r\n      default:\r\n          return state\r\n  }\r\n}\r\n\r\n\r\n// export const userListReducer = (state = { users: [] }, action) => {\r\n//   switch (action.type) {\r\n//       case USER_LIST_REQUEST:\r\n//           return { loading: true }\r\n\r\n//       case USER_LIST_SUCCESS:\r\n//           return { loading: false, users: action.payload }\r\n\r\n//       case USER_LIST_FAIL:\r\n//           return { loading: false, error: action.payload }\r\n\r\n//       case USER_LIST_RESET:\r\n//           return { users: [] }\r\n\r\n//       default:\r\n//           return state\r\n//   }\r\n// }\r\n\r\n\r\n// export const userDeleteReducer = (state = {}, action) => {\r\n//   switch (action.type) {\r\n//       case USER_DELETE_REQUEST:\r\n//           return { loading: true }\r\n\r\n//       case USER_DELETE_SUCCESS:\r\n//           return { loading: false, success: true }\r\n\r\n//       case USER_DELETE_FAIL:\r\n//           return { loading: false, error: action.payload }\r\n\r\n//       default:\r\n//           return state\r\n//   }\r\n// }\r\n\r\n\r\n// export const userUpdateReducer = (state = { user: {} }, action) => {\r\n//   switch (action.type) {\r\n//       case USER_UPDATE_REQUEST:\r\n//           return { loading: true }\r\n\r\n//       case USER_UPDATE_SUCCESS:\r\n//           return { loading: false, success: true }\r\n\r\n//       case USER_UPDATE_FAIL:\r\n//           return { loading: false, error: action.payload }\r\n\r\n//       case USER_UPDATE_RESET:\r\n//           return { user: {} }\r\n\r\n//       default:\r\n//           return state\r\n//   }\r\n// }","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: { cartItems: cartItemsFromStorage,shippingAddress:shippingAddressFromStorage },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './bootstrap.min.css'\nimport { Provider } from 'react-redux'\nimport store from './store'\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}